

AS OPTIONS SÃO:







serverSide --> deixamos como TRUE,
            PQ VAMOS QUERER FETCHEAR A DATA 
            LÁ DO SERVERSIDE...






ajax --> '/categories/load' --> 
                            ISSO É USADO 
                            PARA 

                            ESPECIFICAR 

                            A URL 

                            DE ONDE VAMOS 

                            FETCHEAR A DATA...

                            --> NO CASO,

                            SERÁ 'categories/load'...





'orderMulti' --> true/false...



                    vc pode escolher se SERÁ 
                    POSSÍVEL FAZER 'SORT'

                    considerando MULTI COLUMN ou não 




'columns' --> É A DISTRIBUIÇÃO DA SUA DATA,
                EM QUE COLUMNS FICARÁ...





--> CADA COLUMN 




VAI TER INFO PRÓPRIA...






tipo assim:





{data: 'name'},
{data: 'createdAt'},
{data: 'updatedAt'},
{
    sortable: false,
    data: row => `<div class="d-flex flex">
                    <button type="submit" class="btn btn-outline-primary delete-category-btn" data-id="${row.id}">
                        <i class="bi bi-trash3-fill"></i>
                    </button>
                    <button type="submit" class="btn btn-outline-primary edit-category-btn" data-id="${row.id}">
                        <i class="bi bi-pencil-fill"></i>
                    </button>
                </div>
                `
                
}







OU SEJA,



ISSO VAI DEFINIR A DATA DE CADA COLUMN...






NAS COLUMNS 'NORMAIS',


TEMOS AS KEYS DE CADA COLUMN,


QUE É RETORNADA EM CADA RESPONSE...






OU SEJA,


A RESPONSE 

É UM JSON OBJECT COM 

1 ARRAY DE VALUES,


EM QUE CADA VALUE OBJECT 

POSSUI 


SA PROPRIEDADES DE 'name', 'createdAt' 

e 'upadtedAt'...









-> OK... TODAS AS COLUMNS ESTARÃO 
REPRESENTADAS NESSES JSON objects..










--> A ÚNICA EXCEÇÃO É A ÚLTIMA COLUMN,

QUE NÃO SERÁ EXATAMENTE 

ALGO QUE PULLAMOS DA DATABASE, DO SERVER,



E SIM 

FAZEMOS DISPLAY DE CUSTOM HTML (pq 

são os buttons de 'edit' e 'delete'...)






--> NÓS TAMBÉM DESABILITAMOS SORTING NESSA ÚLTIMA COLUMN,
PQ ISSO BUGARIA TUDO....













-> OK... ISSO É TUDO, QUANTO AOS TABLE OBJECTS... 





'''AND THAT IS PRETTY MUCH IT AS FAR AS THE TABLE OBJECTS 
GO... IT TAKES __ CARE__ OF MAKING THE REQUEST TO THE 
SERVER, WHENEVER SOME ACTION HAPPENS ON THE TABLE (
    like user sorts table by a specific column...

    enters text in the search bar, 


    or uses the pagination (forward and previous buttons)
)









-> O PROFESSOR QUER FALAR DE OUTRA PARTE EM QUE FEZ 
AJUSTES....





-> É ESTA PARTE AQUI:






