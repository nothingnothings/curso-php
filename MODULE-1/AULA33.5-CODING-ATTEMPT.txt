








AS INSTRUCTIONS ESTÃO AQUI:






https://github.com/ggelashvili/learnphptherightway-project/tree/1.31







EX:




1 Set document root to YOUR_PROJECT/public, that way the site is loaded from public/index.php

FEITO


You should include/require all other files in index.php, that's your main file


CRIADA, CERTO...


ESTE CÓDIGO:


<?php

declare(strict_types=1);

$root = dirname(__DIR__) . DIRECTORY_SEPARATOR;

define('APP_PATH', $root . 'app' . DIRECTORY_SEPARATOR);
define('FILES_PATH', $root . 'transaction_files' . DIRECTORY_SEPARATOR);
define('VIEWS_PATH', $root . 'views' . DIRECTORY_SEPARATOR);





You can use APP_PATH, FILES_PATH & VIEWS_PATH constants that are defined in index.php to help you with including files


OK...


2 Main code should go in app directory in any file that you choose, I created empty App.php that you can use to place your main logic but feel free to change it

CERTO...


You should define multiple functions there which will read all files within transaction_files directory and process them. It is up to you how you want to read those files, but the goal is to read all files within that directory


You can assume that all files within transaction_files directory are .csv files
One sample file is provided which contains formatted data
You can assume that all files in transaction_files directory will be of same format for now

3 Store data in memory (in an array)
First column is the date of the transaction
Second column is the check # which is optional & is not always provided
The third column is transaction description
The fourth column is the amount (negative number indicates it's an expense, positive number indicates it's an income)

4 Calculate the total income, total expense & net total (total income - total expense)










CONSEGUI UMA VERSÃO INICIAL DO CÓDIGO...



EX:








<?php

$transaction_data = [];

$files = scandir(FILES_PATH); // will be an array of file names.

foreach ($files as $file) {

    $file_path = FILES_PATH . $file . "";

    if (is_file($file_path)) {
        $fileContent = fopen($file_path, "r");

        while (($line = fgetcsv($fileContent)) !== false) {
            array_push($transaction_data, $line);
        }

    }
}

array_shift($transaction_data);


foreach ($transaction_data as &$line) {
    $line[3] = str_replace(',', '', $line[3]);
}
;

var_dump($transaction_data);

$totalIncome = round(
    array_reduce(
        $transaction_data,
        fn($sum, $item) => $sum + ((float) str_replace('$', '', $item[3]) > 0 ? (float) str_replace('$', '', $item[3]) : 0),
        0
    ),
    2
);

$totalExpense = round(
    array_reduce(
        $transaction_data,
        fn($sum, $item) => $sum + ((float) str_replace('$', '', $item[3]) < 0 ? (float) str_replace('$', '', $item[3]) : 0),
        0
    ),
    2
);

$netTotal = round(
    array_reduce(
        $transaction_data,
        fn($sum, $item) => $sum + ((float) str_replace('$', '', $item[3])),
        0
    ),
    2
);

var_dump($totalIncome);
var_dump($totalExpense);
var_dump($netTotal);







AGORA PRECISO TRANSFORMAR TUDO ISSO EM FUNCTIONS...




5 Print a simple HTML table containing all the data from the files
The html skeleton is provided in views/transactions.php file
The date of the transaction should be in this format "Jan 4, 2021"
Show income amounts in green color & show expense amounts in red
Here is an example of what the table should look like














CONSEGUI... FIZ TODO CÓDIGO FUNCIONAR...






FICOU ASSIM:









(transactions.php):











<!DOCTYPE html>
<html>

<head>
    <title>Transactions</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
            text-align: center;
        }

        table tr th,
        table tr td {
            padding: 5px;
            border: 1px #eee solid;
        }

        tfoot tr th,
        tfoot tr td {
            font-size: 20px;
        }

        tfoot tr th {
            text-align: right;
        }

        .green {
            color: green;
        }

        .red {
            color: red;
        }
    </style>
</head>

<body>
    <table>
        <thead>
            <tr>
                <th>Date</th>
                <th>Check #</th>
                <th>Description</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>

            <?php
            foreach ($transaction_data as $transaction) {
                echo "<tr>";
                echo "<td>" . formatDate($transaction[0]) . "</td>";
                echo "<td>" . $transaction[1] . "</td>";
                echo "<td>" . $transaction[2] . "</td>";
                echo "<td class='" . ((float) str_replace('$', '', $transaction[3]) > 0 ? 'green' : 'red') . "'>" . formatCurrency((float) str_replace('$', '', $transaction[3])) . "</td>";
                echo "</tr>";
            }

            ?>
        </tbody>
        <tfoot>
            <tr>
                <th colspan="3">Total Income:</th>
                <td><?php
                echo formatCurrency(getTotalIncome($transaction_data));
                ?></td>
            </tr>
            <tr>
                <th colspan="3">Total Expense:</th>
                <td><?php
                echo formatCurrency(getTotalExpense($transaction_data));
                ?></td>
            </tr>
            <tr>
                <th colspan="3">Net Total:</th>
                <td><?php
                echo formatCurrency(getNetTotal($transaction_data));
                ?></td>
            </tr>
        </tfoot>
    </table>
</body>

</html>











(App.php):





<?php

$transaction_data = [];

$files = scandir(FILES_PATH); // will be an array of file names.

foreach ($files as $file) {

    $file_path = FILES_PATH . $file . "";

    if (is_file($file_path)) {
        $fileContent = fopen($file_path, "r");

        while (($line = fgetcsv($fileContent)) !== false) {
            array_push($transaction_data, $line);
        }

    }
}

array_shift($transaction_data);


foreach ($transaction_data as &$line) {
    $line[3] = str_replace(',', '', $line[3]);
}
;




function getTotalIncome(array $transaction_data)
{

    return round(
        array_reduce(
            $transaction_data,
            fn($sum, $item) => $sum + ((float) str_replace('$', '', $item[3]) > 0 ? (float) str_replace('$', '', $item[3]) : 0),
            0
        ),
        2
    );
}
;


function getTotalExpense(array $transaction_data)
{

    return round(
        array_reduce(
            $transaction_data,
            fn($sum, $item) => $sum + ((float) str_replace('$', '', $item[3]) < 0 ? (float) str_replace('$', '', $item[3]) : 0),
            0
        ),
        2
    );
}

function getNetTotal(array $transaction_data)
{
    return round(
        array_reduce(
            $transaction_data,
            fn($sum, $item) => $sum + ((float) str_replace('$', '', $item[3])),
            0
        ),
        2
    );

}

function formatCurrency(float $amount): string
{
    // Format the absolute value of the number
    $formatted = number_format(abs($amount), 2, '.', ',');

    // Check if the amount is negative and prepend '-' accordingly
    return ($amount < 0 ? '-' : '') . '$' . $formatted;
}

function formatDate(string $date): string
{
    return date('M j, Y', strtotime($date));
}



















claro que tudo isso foi obtido sem nenhum routing,


só com o negócio meio puro...







--> E MEU public/index.php FICOU ASSIM:





<?php

declare(strict_types=1);

$root = dirname(__DIR__) . DIRECTORY_SEPARATOR;

define('APP_PATH', $root . 'app' . DIRECTORY_SEPARATOR);
define('FILES_PATH', $root . 'transaction_files' . DIRECTORY_SEPARATOR);
define('VIEWS_PATH', $root . 'views' . DIRECTORY_SEPARATOR);


include APP_PATH . 'App.php';


include VIEWS_PATH . 'transactions.php';

















AGORA DEVO ASSISTIR A AULA DO PROFESSOR, E VER COMO ELE FEZ...